import 'package:interface_adapters/interface_adapters.dart';

class LocalDataSourceImpl implements LocalDataSource {
  const LocalDataSourceImpl();

  /// Function to retrieve the country from barcode
  @override
  String getCountryFromBarcode(String barcode) {
    // List of countries with corresponding barcode prefixes
    Map<String, String> countryCodeMap = <String, String>{
      '004': 'Afghanistan',
      '008': 'Albania',
      '012': 'Algeria',
      '020': 'Andorra',
      '022': 'U.S. and Canada',
      '024': 'Angola',
      '028': 'Antigua and Barbuda',
      '032': 'Argentina',
      '036': 'Australia',
      '040': 'Austria',
      '044': 'Bahamas',
      '048': 'Bahrain',
      '050': 'Bangladesh',
      '051': 'Armenia',
      '052': 'Barbados',
      '055': 'Canada',
      '056': 'Belgium',
      // 057 is EAN-13 barcode prefix for the United States
      '057': 'United States',
      '060': 'Canada',
      '064': 'Bhutan',
      '068': 'Bolivia',
      '070': 'Bosnia and Herzegovina',
      '072': 'Botswana',
      '076': 'Brazil',
      '084': 'Belize',
      '100': 'Bulgaria',
      '104': 'Myanmar (Burma)',
      '108': 'Burundi',
      '112': 'Belarus',
      '116': 'Cambodia',
      '120': 'Cameroon',
      '124': 'Canada',
      '132': 'Cape Verde',
      '136': 'Cayman Islands',
      '140': 'Central African Republic',
      '144': 'Sri Lanka',
      '148': 'Chad',
      '152': 'Chile',
      '156': 'China',
      '170': 'Colombia',
      '174': 'Comoros',
      '178': 'Congo (Congo-Brazzaville)',
      '180': 'Congo (Congo-Kinshasa)',
      '184': 'Cook Islands',
      '188': 'Costa Rica',
      '191': 'Croatia',
      '192': 'Cuba',
      '196': 'Cyprus',
      '203': 'Czechia (Czech Republic)',
      '204': 'Benin',
      '208': 'Denmark',
      '212': 'Dominica',
      '214': 'Dominican Republic',
      '218': 'Ecuador',
      '222': 'El Salvador',
      '226': 'Equatorial Guinea',
      '231': 'Ethiopia',
      '232': 'Eritrea',
      '233': 'Estonia',
      '234': 'Faroe Islands',
      '238': 'Falkland Islands (Malvinas)',
      '242': 'Fiji',
      '246': 'Finland',
      '250': 'France',
      '254': 'French Guiana',
      '258': 'French Polynesia',
      '260': 'French Southern Territories',
      '262': 'Djibouti',
      '266': 'Gabon',
      '268': 'Georgia',
      '270': 'Gambia',
      '275': 'Palestine',
      '276': 'Germany',
      '288': 'Ghana',
      '292': 'Gibraltar',
      '296': 'Kiribati',
      '300': 'Greece',
      '304': 'Greenland',
      '308': 'Grenada',
      '312': 'Guadeloupe',
      '316': 'Guam',
      '320': 'Guatemala',
      '324': 'Guinea',
      '328': 'Guyana',
      '332': 'Haiti',
      '334': 'Heard Island and McDonald Islands',
      '336': 'Vatican City (Holy See)',
      '340': 'Honduras',
      '344': 'Hong Kong',
      '348': 'Hungary',
      '352': 'Iceland',
      '356': 'India',
      '360': 'Indonesia',
      '364': 'Iran',
      '368': 'Iraq',
      // This is the prefix to the barcode of Toronto public library
      '371': 'Canada',
      '372': 'Ireland',
      '376': 'Israel',
      '380': 'Italy',
      '384': 'Cote d\'Ivoire (Ivory Coast)',
      '388': 'Jamaica',
      '392': 'Japan',
      '398': 'Kazakhstan',
      '400': 'Jordan',
      '404': 'Kenya',
      '408': 'North Korea',
      '410': 'South Korea',
      '414': 'Kuwait',
      '417': 'Kyrgyzstan',
      '418': 'Laos',
      '422': 'Lebanon',
      '426': 'Lesotho',
      '428': 'Latvia',
      '430': 'Liberia',
      '434': 'Libya',
      '438': 'Liechtenstein',
      '440': 'Lithuania',
      '442': 'Luxembourg',
      '446': 'Macao',
      '450': 'Madagascar',
      '454': 'Malawi',
      '458': 'Malaysia',
      '462': 'Maldives',
      '466': 'Mali',
      '470': 'Malta',
      '474': 'Martinique',
      '478': 'Mauritania',
      '480': 'Mauritius',
      // 482 is a EAN-13 barcode prefix for Ukraine
      '482': 'Ukraine',
      //484 is ISO 3166-1 numeric code for Mexico
      '484': 'Mexico',
      '492': 'Monaco',
      '496': 'Mongolia',
      '498': 'Moldova',
      '499': 'Montenegro',
      '500': 'Montserrat',
      '504': 'Morocco',
      '508': 'Mozambique',
      '512': 'Oman',
      '516': 'Namibia',
      '520': 'Nauru',
      '524': 'Nepal',
      '528': 'Netherlands',
      '531': 'Curacao',
      '533': 'Aruba',
      '534': 'Sint Maarten (Dutch part)',
      '535': 'Bonaire, Sint Eustatius and Saba',
      '540': 'New Caledonia',
      '548': 'Vanuatu',
      '554': 'New Zealand',
      '558': 'Nicaragua',
      '562': 'Niger',
      '566': 'Nigeria',
      '570': 'Niue',
      '574': 'Norfolk Island',
      '578': 'Norway',
      '580': 'Northern Mariana Islands',
      '581': 'United States Minor Outlying Islands',
      '583': 'Micronesia',
      '584': 'Marshall Islands',
      '585': 'Palau',
      '586': 'Pakistan',
      '591': 'Panama',
      '598': 'Papua New Guinea',
      '600': 'Paraguay',
      '604': 'Peru',
      '608': 'Philippines',
      '612': 'Pitcairn',
      '616': 'Poland',
      '620': 'Portugal',
      '624': 'Guinea-Bissau',
      '626': 'Timor-Leste',
      // “628” is the GS1 barcode of Saudi Arabia.
      '628': 'Saudi Arabia',
      '630': 'Qatar',
      '634': 'Reunion',
      '642': 'Romania',
      '643': 'Russia',
      '646': 'Rwanda',
      '652': 'Saint Barthelemy',
      '654': 'Saint Helena',
      '659': 'Saint Kitts and Nevis',
      '662': 'Anguilla',
      '663': 'Saint Lucia',
      '666': 'Saint Martin',
      '670': 'Saint Pierre and Miquelon',
      '674': 'Saint Vincent and the Grenadines',
      '678': 'San Marino',
      '682': 'Sao Tome and Principe',
      '686': 'Saudi Arabia',
      '688': 'Senegal',
      '690': 'Seychelles',
      '694': 'Sierra Leone',
      '702': 'Singapore',
      '703': 'Slovakia',
      '704': 'Vietnam',
      '705': 'Slovenia',
      '706': 'Somalia',
      '710': 'South Africa',
      '716': 'Zimbabwe',
      '724': 'Spain',
      '728': 'South Sudan',
      '729': 'Sudan',
      '732': 'Western Sahara',
      '740': 'Suriname',
      '744': 'Svalbard and Jan Mayen',
      '748': 'Eswatini',
      '752': 'Sweden',
      '756': 'Switzerland',
      // 759 is EAN-13 prefix barcode for Mexico
      '759': 'Mexico',
      // The prefix "76" indicates that it is registered with the UCC
      // (Uniform Code Council) system, which is commonly used in the USA.
      '76': 'United States',
      '760': 'Syria',
      '762': 'Tajikistan',
      '764': 'Thailand',
      '768': 'Togo',
      '772': 'Tokelau',
      '776': 'Tonga',
      '780': 'Trinidad and Tobago',
      '784': 'United Arab Emirates',
      '788': 'Tunisia',
      '792': 'Turkey',
      '795': 'Turkmenistan',
      '796': 'Turks and Caicos Islands',
      '798': 'Tuvalu',
      '800': 'Uganda',
      '804': 'Ukraine',
      '807': 'North Macedonia',
      '818': 'Egypt',
      '826': 'United Kingdom',
      '831': 'Guernsey',
      '832': 'Jersey',
      '833': 'Isle of Man',
      '834': 'Tanzania',
      // 840 is ISO 3166-1 numeric code for the United States
      '840': 'United States',
      '850': 'United States Virgin Islands',
      '854': 'Burkina Faso',
      '858': 'Uruguay',
      '860': 'Uzbekistan',
      '862': 'Venezuela',
      '876': 'Wallis and Futuna',
      '882': 'Samoa',
      '887': 'Yemen',
      '894': 'Zambia',
    };

    String prefix = barcode.substring(0, 3);

    // Check barcode format and retrieve country
    return countryCodeMap[prefix] ??
        countryCodeMap[barcode.substring(0, 2)] ??
        '';
  }

  @override
  bool isEnglishBook(String barcode) {
    List<int> digits = barcode.codeUnits
        .where((int char) => char >= 48 && char <= 57)
        .map((int char) => char - 48)
        .toList();

    if (digits.length != 13) {
      return false;
    }

    // Check if it starts with "978" (common Book-land prefix)
    if (digits.sublist(0, 3).join() != '978') {
      return false;
    }
    return true;
  }
}
